// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Partify.DataAccess.DbContexts;

#nullable disable

namespace Partify.DataAccess.Migrations;

[DbContext(typeof(ApplicationDbContext))]
partial class ApplicationDbContextModelSnapshot : ModelSnapshot
{
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "8.0.6")
            .HasAnnotation("Relational:MaxIdentifierLength", 63);

        NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

        modelBuilder.Entity("Partify.Domain.Entities.Ads.Ad", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<long>("AdCategoryId")
                    .HasColumnType("bigint");

                b.Property<string>("Address")
                    .HasColumnType("text");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long>("CreatedById")
                    .HasColumnType("bigint");

                b.Property<DateTime?>("DeletedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("DeletedById")
                    .HasColumnType("bigint");

                b.Property<string>("Description")
                    .HasColumnType("text");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("boolean");

                b.Property<long>("MerchantId")
                    .HasColumnType("bigint");

                b.Property<long>("Phone")
                    .HasColumnType("bigint");

                b.Property<decimal>("Price")
                    .HasColumnType("numeric");

                b.Property<int>("Status")
                    .HasColumnType("integer");

                b.Property<string>("Title")
                    .HasColumnType("text");

                b.Property<int>("Type")
                    .HasColumnType("integer");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("UpdatedById")
                    .HasColumnType("bigint");

                b.HasKey("Id");

                b.HasIndex("AdCategoryId");

                b.HasIndex("Address");

                b.HasIndex("Id");

                b.HasIndex("MerchantId");

                b.HasIndex("Price");

                b.HasIndex("Title");

                b.ToTable("Ads");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Ads.AdCategory", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long>("CreatedById")
                    .HasColumnType("bigint");

                b.Property<DateTime?>("DeletedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("DeletedById")
                    .HasColumnType("bigint");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("boolean");

                b.Property<string>("Name")
                    .HasColumnType("text");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("UpdatedById")
                    .HasColumnType("bigint");

                b.HasKey("Id");

                b.ToTable("AdCategories");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Ads.AdCategoryProperty", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<long>("AdCategoryId")
                    .HasColumnType("bigint");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long>("CreatedById")
                    .HasColumnType("bigint");

                b.Property<DateTime?>("DeletedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("DeletedById")
                    .HasColumnType("bigint");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("boolean");

                b.Property<string>("Name")
                    .HasColumnType("text");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("UpdatedById")
                    .HasColumnType("bigint");

                b.HasKey("Id");

                b.HasIndex("AdCategoryId");

                b.ToTable("AdCategoryProperties");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Ads.AdComment", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<long>("AdId")
                    .HasColumnType("bigint");

                b.Property<string>("Comment")
                    .HasColumnType("text");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long>("CreatedById")
                    .HasColumnType("bigint");

                b.Property<DateTime?>("DeletedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("DeletedById")
                    .HasColumnType("bigint");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("boolean");

                b.Property<long?>("ParentId")
                    .HasColumnType("bigint");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("UpdatedById")
                    .HasColumnType("bigint");

                b.Property<long>("UserId")
                    .HasColumnType("bigint");

                b.HasKey("Id");

                b.HasIndex("AdId");

                b.HasIndex("UserId");

                b.ToTable("AdComments");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Ads.AdCommentFile", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<long>("AdCommentId")
                    .HasColumnType("bigint");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long>("CreatedById")
                    .HasColumnType("bigint");

                b.Property<DateTime?>("DeletedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("DeletedById")
                    .HasColumnType("bigint");

                b.Property<long?>("FileId")
                    .HasColumnType("bigint");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("boolean");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("UpdatedById")
                    .HasColumnType("bigint");

                b.HasKey("Id");

                b.HasIndex("AdCommentId");

                b.HasIndex("FileId");

                b.ToTable("AdCommentFiles");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Ads.AdFacility", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<long>("AdId")
                    .HasColumnType("bigint");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long>("CreatedById")
                    .HasColumnType("bigint");

                b.Property<DateTime?>("DeletedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("DeletedById")
                    .HasColumnType("bigint");

                b.Property<long>("FacilityId")
                    .HasColumnType("bigint");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("boolean");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("UpdatedById")
                    .HasColumnType("bigint");

                b.HasKey("Id");

                b.HasIndex("AdId");

                b.HasIndex("FacilityId");

                b.ToTable("AdFacilities");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Ads.AdImage", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<long>("AdId")
                    .HasColumnType("bigint");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long>("CreatedById")
                    .HasColumnType("bigint");

                b.Property<DateTime?>("DeletedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("DeletedById")
                    .HasColumnType("bigint");

                b.Property<long>("ImageId")
                    .HasColumnType("bigint");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("boolean");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("UpdatedById")
                    .HasColumnType("bigint");

                b.HasKey("Id");

                b.HasIndex("AdId");

                b.HasIndex("ImageId");

                b.ToTable("AdImages");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Ads.AdPropertyValue", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<long>("AdCategoryPropertyId")
                    .HasColumnType("bigint");

                b.Property<long?>("AdId")
                    .HasColumnType("bigint");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long>("CreatedById")
                    .HasColumnType("bigint");

                b.Property<DateTime?>("DeletedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("DeletedById")
                    .HasColumnType("bigint");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("boolean");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("UpdatedById")
                    .HasColumnType("bigint");

                b.Property<string>("Value")
                    .HasColumnType("text");

                b.HasKey("Id");

                b.HasIndex("AdId");

                b.ToTable("AdPropertyValues");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Ads.AdScore", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<long>("AdId")
                    .HasColumnType("bigint");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long>("CreatedById")
                    .HasColumnType("bigint");

                b.Property<DateTime?>("DeletedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("DeletedById")
                    .HasColumnType("bigint");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("boolean");

                b.Property<int>("Score")
                    .HasColumnType("integer");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("UpdatedById")
                    .HasColumnType("bigint");

                b.Property<long>("UserId")
                    .HasColumnType("bigint");

                b.HasKey("Id");

                b.HasIndex("AdId");

                b.HasIndex("UserId");

                b.ToTable("AdScores");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Ads.AdView", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<long>("AdId")
                    .HasColumnType("bigint");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long>("CreatedById")
                    .HasColumnType("bigint");

                b.Property<DateTime?>("DeletedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("DeletedById")
                    .HasColumnType("bigint");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("boolean");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("UpdatedById")
                    .HasColumnType("bigint");

                b.Property<int>("ViewCount")
                    .HasColumnType("integer");

                b.HasKey("Id");

                b.HasIndex("AdId");

                b.ToTable("AdViews");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Ads.FavoriteAd", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<long>("AdId")
                    .HasColumnType("bigint");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long>("CreatedById")
                    .HasColumnType("bigint");

                b.Property<DateTime?>("DeletedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("DeletedById")
                    .HasColumnType("bigint");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("boolean");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("UpdatedById")
                    .HasColumnType("bigint");

                b.Property<long>("UserId")
                    .HasColumnType("bigint");

                b.HasKey("Id");

                b.HasIndex("AdId");

                b.HasIndex("UserId");

                b.ToTable("FavoriteAds");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Commons.Asset", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long>("CreatedById")
                    .HasColumnType("bigint");

                b.Property<DateTime?>("DeletedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("DeletedById")
                    .HasColumnType("bigint");

                b.Property<string>("FileName")
                    .HasColumnType("text");

                b.Property<string>("FilePath")
                    .HasColumnType("text");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("boolean");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("UpdatedById")
                    .HasColumnType("bigint");

                b.HasKey("Id");

                b.ToTable("Assets");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Facilities.Facility", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long>("CreatedById")
                    .HasColumnType("bigint");

                b.Property<DateTime?>("DeletedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("DeletedById")
                    .HasColumnType("bigint");

                b.Property<string>("Icon")
                    .HasColumnType("text");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("boolean");

                b.Property<string>("Name")
                    .HasColumnType("text");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("UpdatedById")
                    .HasColumnType("bigint");

                b.HasKey("Id");

                b.ToTable("Facilities");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Users.Merchant", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long>("CreatedById")
                    .HasColumnType("bigint");

                b.Property<DateTime?>("DeletedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("DeletedById")
                    .HasColumnType("bigint");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("boolean");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("UpdatedById")
                    .HasColumnType("bigint");

                b.Property<long>("UserId")
                    .HasColumnType("bigint");

                b.HasKey("Id");

                b.HasIndex("UserId");

                b.ToTable("Merchants");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Users.Permission", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<string>("Action")
                    .HasColumnType("text");

                b.Property<string>("Controller")
                    .HasColumnType("text");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long>("CreatedById")
                    .HasColumnType("bigint");

                b.Property<DateTime?>("DeletedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("DeletedById")
                    .HasColumnType("bigint");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("boolean");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("UpdatedById")
                    .HasColumnType("bigint");

                b.HasKey("Id");

                b.ToTable("Permissions");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Users.User", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long>("CreatedById")
                    .HasColumnType("bigint");

                b.Property<DateTime?>("DeletedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("DeletedById")
                    .HasColumnType("bigint");

                b.Property<string>("Email")
                    .HasColumnType("text");

                b.Property<string>("FirstName")
                    .HasColumnType("text");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("boolean");

                b.Property<string>("LastName")
                    .HasColumnType("text");

                b.Property<string>("Password")
                    .HasColumnType("text");

                b.Property<long>("Phone")
                    .HasColumnType("bigint");

                b.Property<long>("RoleId")
                    .HasColumnType("bigint");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("UpdatedById")
                    .HasColumnType("bigint");

                b.HasKey("Id");

                b.HasIndex("RoleId");

                b.ToTable("Users");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Users.UserRole", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long>("CreatedById")
                    .HasColumnType("bigint");

                b.Property<DateTime?>("DeletedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("DeletedById")
                    .HasColumnType("bigint");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("boolean");

                b.Property<string>("Name")
                    .HasColumnType("text");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("UpdatedById")
                    .HasColumnType("bigint");

                b.HasKey("Id");

                b.ToTable("UserRoles");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Users.UserRolePermission", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long>("CreatedById")
                    .HasColumnType("bigint");

                b.Property<DateTime?>("DeletedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("DeletedById")
                    .HasColumnType("bigint");

                b.Property<bool>("IsDeleted")
                    .HasColumnType("boolean");

                b.Property<long>("PermissionId")
                    .HasColumnType("bigint");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<long?>("UpdatedById")
                    .HasColumnType("bigint");

                b.Property<long>("UserRoleId")
                    .HasColumnType("bigint");

                b.HasKey("Id");

                b.HasIndex("PermissionId");

                b.HasIndex("UserRoleId");

                b.ToTable("UserRolePermissions");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Ads.Ad", b =>
            {
                b.HasOne("Partify.Domain.Entities.Ads.AdCategory", "AdCategory")
                    .WithMany()
                    .HasForeignKey("AdCategoryId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("Partify.Domain.Entities.Users.Merchant", "Merchant")
                    .WithMany()
                    .HasForeignKey("MerchantId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("AdCategory");

                b.Navigation("Merchant");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Ads.AdCategoryProperty", b =>
            {
                b.HasOne("Partify.Domain.Entities.Ads.AdCategory", "AdCategory")
                    .WithMany()
                    .HasForeignKey("AdCategoryId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("AdCategory");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Ads.AdComment", b =>
            {
                b.HasOne("Partify.Domain.Entities.Ads.Ad", "Ad")
                    .WithMany("Comments")
                    .HasForeignKey("AdId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("Partify.Domain.Entities.Users.User", "User")
                    .WithMany()
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Ad");

                b.Navigation("User");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Ads.AdCommentFile", b =>
            {
                b.HasOne("Partify.Domain.Entities.Ads.AdComment", "AdComment")
                    .WithMany("Files")
                    .HasForeignKey("AdCommentId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("Partify.Domain.Entities.Commons.Asset", "File")
                    .WithMany()
                    .HasForeignKey("FileId");

                b.Navigation("AdComment");

                b.Navigation("File");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Ads.AdFacility", b =>
            {
                b.HasOne("Partify.Domain.Entities.Ads.Ad", "Ad")
                    .WithMany("Facilities")
                    .HasForeignKey("AdId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("Partify.Domain.Entities.Facilities.Facility", "Facility")
                    .WithMany()
                    .HasForeignKey("FacilityId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Ad");

                b.Navigation("Facility");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Ads.AdImage", b =>
            {
                b.HasOne("Partify.Domain.Entities.Ads.Ad", "Ad")
                    .WithMany("Images")
                    .HasForeignKey("AdId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("Partify.Domain.Entities.Commons.Asset", "Image")
                    .WithMany()
                    .HasForeignKey("ImageId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Ad");

                b.Navigation("Image");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Ads.AdPropertyValue", b =>
            {
                b.HasOne("Partify.Domain.Entities.Ads.Ad", null)
                    .WithMany("Properties")
                    .HasForeignKey("AdId");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Ads.AdScore", b =>
            {
                b.HasOne("Partify.Domain.Entities.Ads.Ad", "Ad")
                    .WithMany("Scores")
                    .HasForeignKey("AdId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("Partify.Domain.Entities.Users.User", "User")
                    .WithMany()
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Ad");

                b.Navigation("User");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Ads.AdView", b =>
            {
                b.HasOne("Partify.Domain.Entities.Ads.Ad", "Ad")
                    .WithMany()
                    .HasForeignKey("AdId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Ad");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Ads.FavoriteAd", b =>
            {
                b.HasOne("Partify.Domain.Entities.Ads.Ad", "Ad")
                    .WithMany()
                    .HasForeignKey("AdId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("Partify.Domain.Entities.Users.User", "User")
                    .WithMany()
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Ad");

                b.Navigation("User");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Users.Merchant", b =>
            {
                b.HasOne("Partify.Domain.Entities.Users.User", "User")
                    .WithMany()
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("User");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Users.User", b =>
            {
                b.HasOne("Partify.Domain.Entities.Users.UserRole", "Role")
                    .WithMany()
                    .HasForeignKey("RoleId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Role");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Users.UserRolePermission", b =>
            {
                b.HasOne("Partify.Domain.Entities.Users.Permission", "Permission")
                    .WithMany()
                    .HasForeignKey("PermissionId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("Partify.Domain.Entities.Users.UserRole", "UserRole")
                    .WithMany()
                    .HasForeignKey("UserRoleId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Permission");

                b.Navigation("UserRole");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Ads.Ad", b =>
            {
                b.Navigation("Comments");

                b.Navigation("Facilities");

                b.Navigation("Images");

                b.Navigation("Properties");

                b.Navigation("Scores");
            });

        modelBuilder.Entity("Partify.Domain.Entities.Ads.AdComment", b =>
            {
                b.Navigation("Files");
            });
#pragma warning restore 612, 618
    }
}
